<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hyundai.app.event.mapper.EventMapper">
    <!--    @author 엄상은  -->
    <!--    @since 2024/02/18  -->
    <!--    이벤트 mapper  -->
    <select id="findCurrentEventByEventType" parameterType="eventtype" resultType="eventdetailresdto">
        SELECT  id
                , title
                , content
                , event_type
                , store_id
                , reward_type
                , reward
        FROM    event
        WHERE   sysdate BETWEEN started_at AND finished_at
        AND     id  IN  (SELECT event_id
                        FROM    event_active_time
                        WHERE   TO_NUMBER(TO_CHAR(sysdate, 'HH24')) BETWEEN openned_at AND closed_at)
        AND     (#{eventType} IS NULL OR event_type = #{eventType})
        AND     max_count >= visited_count
        AND     is_deleted = 0
        FETCH   FIRST 1 ROWS ONLY
    </select>

    <select id="findEventList" parameterType="idwithcriteria" resultType="eventdetailresdto">
        SELECT  *
        FROM    (SELECT  ROWNUM AS rnum
                        , id
                        , title
                        , event_type
                        , started_at
                        , finished_at
                        , reward_type
                        , max_count
                        , visited_count
                FROM    (SELECT  id
                        , title
                        , event_type
                        , started_at
                        , finished_at
                        , reward_type
                        , max_count
                        , visited_count
                        FROM    event
                        WHERE   store_id = #{storeId}
                        AND     is_deleted = 0
                        ORDER BY id DESC
                        )
                WHERE   #{pageNum} * #{amount} >= ROWNUM
                )
        WHERE   rnum > (#{pageNum} - 1) * #{amount}
    </select>

    <select id="findById" resultType="eventdetailresdto">
        SELECT  id
                , title
                , content
                , event_type
                , store_id
                , reward_type
                , reward
                , started_at
                , finished_at
                , max_count
                , visited_count
                , coupon_id
        FROM    event
        WHERE   id = #{eventId}
    </select>

    <insert id="save" parameterType="eventsavereqdto">
        INSERT  INTO event (title
                           , started_at
                           , finished_at
                           , max_count
                           , event_type
                           , store_id
                           , reward_type
                           , reward
                           , content
                           <if test="rewardType.toString()=='COUPON'">, coupon_id</if>)
        VALUES  (#{title}
                , #{startedAt}
                , #{finishedAt}
                , #{maxCount}
                , #{eventType}
                , #{storeId}
                , #{rewardType}
                , #{reward}
                , #{content}
                <if test="rewardType.toString()=='COUPON'">, #{couponId}</if>)
        <selectKey keyProperty="id" resultType="int" order="AFTER">
            SELECT  MAX(id)
            FROM    event
        </selectKey>
    </insert>

    <update id="update" parameterType="eventsavereqdto">
        UPDATE  event
        SET     title = #{title}
                , started_at = #{startedAt}
                , finished_at = #{finishedAt}
                , max_count = #{maxCount}
                , event_type = #{eventType}
                , reward_type = #{rewardType}
                , reward = #{reward}
                , content = #{content}
                , updated_at = SYSDATE
        WHERE   id = #{id}
    </update>

    <delete id="delete">
        UPDATE  event
        SET     is_deleted = 1
                , updated_at = SYSDATE
        WHERE   id = #{eventId}
    </delete>

    <select id="findEventAllByEventType" parameterType="eventtype" resultType="eventdetailresdto">
        SELECT  id
                , title
                , content
                , event_type
                , store_id
                , reward_type
                , reward
                , started_at
                , finished_at
                , max_count
                , visited_count
        FROM    event
        WHERE   sysdate BETWEEN started_at AND finished_at
        AND     id  IN  (SELECT event_id
        FROM    event_active_time
        WHERE   TO_NUMBER(TO_CHAR(sysdate, 'HH24')) BETWEEN openned_at AND closed_at)
        AND     (#{eventType} IS NULL OR event_type = #{eventType})
        AND     max_count >= visited_count
        AND     is_deleted = 0
    </select>

    <update id="increaseVisitedCount" parameterType="int">
        UPDATE  event
        SET     visited_count = visited_count + 1
        WHERE   id = #{eventId}
    </update>
</mapper>
